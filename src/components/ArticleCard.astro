---
interface Props {
  href?: string; // Make href optional
}
const { category, title, date, imgSrc, href } = Astro.props;

const Tag = href ? 'a' : 'div';
const commonProps = {
  class: "article-card",
  ...(href && { href: Astro.props.href, target: Astro.props.href?.startsWith('http') ? '_blank' : undefined })
};
---
<Tag {...commonProps}>
  <img src={imgSrc} alt={title} class="article-img"/>
  <div class="article-content">
    <p class="article-category">{category}</p>
    <h4 class="article-title">{title}</h4>
    <p class="article-date">{date}</p>
  </div>
</Tag>
>>>>>>> 5962fe0 (feat: Make ArticleCard component optionally linkable)

<style>
  .article-card-link {
=======
  href?: string; // Make href optional
}
const { category, title, date, imgSrc, href } = Astro.props;

const Tag = href ? 'a' : 'div';
const commonProps = {
  class: "article-card",
  ...(href && { href: Astro.props.href, target: Astro.props.href?.startsWith('http') ? '_blank' : undefined })
};
---
<Tag {...commonProps}>
  <img src={imgSrc} alt={title} class="article-img"/>
  <div class="article-content">
    <p class="article-category">{category}</p>
    <h4 class="article-title">{title}</h4>
    <p class="article-date">{date}</p>
  </div>
</Tag>
>>>>>>> 5962fe0 (feat: Make ArticleCard component optionally linkable)

<style>
  .article-card-link {
    text-decoration: none; /* Remove underline from the link */
    color: inherit; /* Inherit text color */
    display: block; /* Make the link block level */
  }

  .article-card {
    background-color: #1a1a1a;
    color: var(--color-text); /* Ensure text color is inherited for links */
    text-decoration: none; /* Remove underline from link */
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  .article-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    text-decoration: none; /* Ensure no underline on hover for the whole card */
  }
  .article-card .article-title:hover {
    text-decoration: underline; /* Optionally underline title on hover if it's a link */
>>>>>>> 5962fe0 (feat: Make ArticleCard component optionally linkable)
  }

  .article-card:hover {
    transform: translateY(-5px); /* Lift card slightly on hover */
  }

  .article-img {
=======
    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
  }
  .article-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    text-decoration: none; /* Ensure no underline on hover for the whole card */
  }
  .article-card .article-title:hover {
    text-decoration: underline; /* Optionally underline title on hover if it's a link */
>>>>>>> 5962fe0 (feat: Make ArticleCard component optionally linkable)
  }

  .article-card:hover {
    transform: translateY(-5px); /* Lift card slightly on hover */
  }

  .article-img {
    width: 150px; /* Fixed width for image */
    height: auto;
    object-fit: cover;
    flex-shrink: 0; /* Prevent image from shrinking */
  }
  .article-content {
    padding: 1rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }
  .article-category {
    font-size: 0.8rem;
    color: #aaa;
    margin-bottom: 0.5rem;
    text-transform: uppercase;
  }
  .article-title {
    font-size: 1.2rem;
    color: var(--color-text);
    margin-bottom: 0.5rem;
    line-height: 1.3;
  }
  .article-date {
    font-size: 0.9rem;
    color: #ccc;
    margin: 0;
  }

  @media (max-width: 500px) {
    .article-card {
      flex-direction: column; /* Stack image and content on small screens */
    }
    .article-img {
      width: 100%;
      height: 150px; /* Fixed height for stacked image */
    }
  }
</style>
